{"name": "test_create_cart", "status": "broken", "statusDetails": {"message": "httpx.ConnectError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: self-signed certificate in certificate chain (_ssl.c:1020)", "trace": "@contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n>           yield\n\n../../Library/Caches/pypoetry/virtualenvs/qa-kit-hbfO0URw-py3.13/lib/python3.13/site-packages/httpx/_transports/default.py:66: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../Library/Caches/pypoetry/virtualenvs/qa-kit-hbfO0URw-py3.13/lib/python3.13/site-packages/httpx/_transports/default.py:366: in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n../../Library/Caches/pypoetry/virtualenvs/qa-kit-hbfO0URw-py3.13/lib/python3.13/site-packages/httpcore/_async/connection_pool.py:256: in handle_async_request\n    raise exc from None\n../../Library/Caches/pypoetry/virtualenvs/qa-kit-hbfO0URw-py3.13/lib/python3.13/site-packages/httpcore/_async/connection_pool.py:236: in handle_async_request\n    response = await connection.handle_async_request(\n../../Library/Caches/pypoetry/virtualenvs/qa-kit-hbfO0URw-py3.13/lib/python3.13/site-packages/httpcore/_async/connection.py:101: in handle_async_request\n    raise exc\n../../Library/Caches/pypoetry/virtualenvs/qa-kit-hbfO0URw-py3.13/lib/python3.13/site-packages/httpcore/_async/connection.py:78: in handle_async_request\n    stream = await self._connect(request)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n../../Library/Caches/pypoetry/virtualenvs/qa-kit-hbfO0URw-py3.13/lib/python3.13/site-packages/httpcore/_async/connection.py:156: in _connect\n    stream = await stream.start_tls(**kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n../../Library/Caches/pypoetry/virtualenvs/qa-kit-hbfO0URw-py3.13/lib/python3.13/site-packages/httpcore/_backends/anyio.py:67: in start_tls\n    with map_exceptions(exc_map):\n         ^^^^^^^^^^^^^^^^^^^^^^^\n../../.pyenv/versions/3.13.0/lib/python3.13/contextlib.py:162: in __exit__\n    self.gen.throw(value)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nmap = {<class 'TimeoutError'>: <class 'httpcore.ConnectTimeout'>, <class 'anyio.BrokenResourceError'>: <class 'httpcore.Conn... <class 'anyio.EndOfStream'>: <class 'httpcore.ConnectError'>, <class 'ssl.SSLError'>: <class 'httpcore.ConnectError'>}\n\n    @contextlib.contextmanager\n    def map_exceptions(map: ExceptionMapping) -> typing.Iterator[None]:\n        try:\n            yield\n        except Exception as exc:  # noqa: PIE786\n            for from_exc, to_exc in map.items():\n                if isinstance(exc, from_exc):\n>                   raise to_exc(exc) from exc\nE                   httpcore.ConnectError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: self-signed certificate in certificate chain (_ssl.c:1020)\n\n../../Library/Caches/pypoetry/virtualenvs/qa-kit-hbfO0URw-py3.13/lib/python3.13/site-packages/httpcore/_exceptions.py:14: ConnectError\n\nThe above exception was the direct cause of the following exception:\n\n    @allure.story(\"Cart API Suite\")\n    @pytest.mark.asyncio\n    async def test_create_cart():\n        \"\"\"create_cart\"\"\"\n        async with httpx.AsyncClient(base_url=\"https://api.acc.kpn.org/shop-core/v1\") as client:\n>           resp = await client.request(\n                \"POST\",\n                \"/cart/\",\n                json={\n        \"channel\": {\n            \"id\": \"bo_lov_saleschannel_online\",\n            \"name\": \"Online\"\n        },\n        \"marketSegment\": {\n            \"id\": \"bo_lov_marketsegment_consumer\",\n            \"name\": \"Consumer\"\n        }\n    },\n                params={}\n            )\n\ntests/generated/test_create_cart_1.py:10: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../Library/Caches/pypoetry/virtualenvs/qa-kit-hbfO0URw-py3.13/lib/python3.13/site-packages/httpx/_client.py:1530: in request\n    return await self.send(request, auth=auth, follow_redirects=follow_redirects)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n../../Library/Caches/pypoetry/virtualenvs/qa-kit-hbfO0URw-py3.13/lib/python3.13/site-packages/httpx/_client.py:1617: in send\n    response = await self._send_handling_auth(\n../../Library/Caches/pypoetry/virtualenvs/qa-kit-hbfO0URw-py3.13/lib/python3.13/site-packages/httpx/_client.py:1645: in _send_handling_auth\n    response = await self._send_handling_redirects(\n../../Library/Caches/pypoetry/virtualenvs/qa-kit-hbfO0URw-py3.13/lib/python3.13/site-packages/httpx/_client.py:1682: in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n../../Library/Caches/pypoetry/virtualenvs/qa-kit-hbfO0URw-py3.13/lib/python3.13/site-packages/httpx/_client.py:1719: in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n../../Library/Caches/pypoetry/virtualenvs/qa-kit-hbfO0URw-py3.13/lib/python3.13/site-packages/httpx/_transports/default.py:365: in handle_async_request\n    with map_httpcore_exceptions():\n         ^^^^^^^^^^^^^^^^^^^^^^^^^\n../../.pyenv/versions/3.13.0/lib/python3.13/contextlib.py:162: in __exit__\n    self.gen.throw(value)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    @contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n            yield\n        except Exception as exc:\n            mapped_exc = None\n    \n            for from_exc, to_exc in HTTPCORE_EXC_MAP.items():\n                if not isinstance(exc, from_exc):\n                    continue\n                # We want to map to the most specific exception we can find.\n                # Eg if `exc` is an `httpcore.ReadTimeout`, we want to map to\n                # `httpx.ReadTimeout`, not just `httpx.TimeoutException`.\n                if mapped_exc is None or issubclass(to_exc, mapped_exc):\n                    mapped_exc = to_exc\n    \n            if mapped_exc is None:  # pragma: no cover\n                raise\n    \n            message = str(exc)\n>           raise mapped_exc(message) from exc\nE           httpx.ConnectError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: self-signed certificate in certificate chain (_ssl.c:1020)\n\n../../Library/Caches/pypoetry/virtualenvs/qa-kit-hbfO0URw-py3.13/lib/python3.13/site-packages/httpx/_transports/default.py:83: ConnectError"}, "description": "create_cart", "start": 1761891833192, "stop": 1761891833331, "uuid": "cc0ad478-7b02-45bf-a5ce-3a30440c352e", "historyId": "91cdedd03342c48546c3f9d2bc59d02b", "testCaseId": "91cdedd03342c48546c3f9d2bc59d02b", "fullName": "tests.generated.test_create_cart_1#test_create_cart", "labels": [{"name": "story", "value": "Cart API Suite"}, {"name": "tag", "value": "asyncio"}, {"name": "parentSuite", "value": "tests.generated"}, {"name": "suite", "value": "test_create_cart_1"}, {"name": "host", "value": "Roshs-MacBook-Pro.local"}, {"name": "thread", "value": "44563-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.generated.test_create_cart_1"}], "titlePath": ["tests", "generated", "test_create_cart_1.py"]}